server.port=8082
eureka.instance.hostname=localhost
# disable the client features
eureka.client.fetch-registry=false
eureka.client.register-with-eureka=false

spring.datasource.username=root
spring.datasource.password=Mysql@123
#spring.datasource.url=jdbc:mysql://localhost:3306/moviedb
spring.datasource.url=jdbc:mariadb://localhost:3306/movieproject
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.driver.class-name=org.mariadb.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL55Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.hibernate.ddl-auto=update


spring.jpa.show-sql=true

spring.jpa.properties.hibernate.format_sql=true

#For MovieShowServiceError
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256

spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=

default.key.serde: org.apache.kafka.common.serialization.Serdes$LongSerde
default.value.serde: org.springframework.kafka.support.serializer.JsonSerde
spring.json.trusted.packages: "*"
state-dir: /tmp/kafka-streams/
spring.output.ansi.enabled: ALWAYS
logging.pattern.console:%clr(%d{HH:mm:ss.SSS}){blue} %clr(---){faint} %clr([%15.15t]){yellow} %clr(:){red} %clr(%m){faint}%n


# proxy url for ams, ** is used to navigate to all the end points
zuul.routes.ams=/city-service/**
# proxy url for wms
zuul.routes.wms=/movie-service/**

zuul.prefix=/api

# optional not required
zuul.ribbon.eager-load.enabled=true
